---
export interface Team {
  name: string;
  group: string;
  points: string;
  mp: string;
  w: string;
  d: string;
  l: string;
  gf: string;
  ga: string;
  gd: string;
  position?: string;
}
export interface Props {
  teams: Team[];
}
const { teams } = Astro.props;
---

<div id="group">
  <table>
    <thead>
      <tr>
        <th class="table-left">Group {teams[0].group}</th>
        <th>MP</th>
        <th>W</th>
        <th>D</th>
        <th>L</th>
        <th>GF</th>
        <th>GA</th>
        <th>GD</th>
        <th>Pts</th>
      </tr>
    </thead>
    <tbody>
      {
        teams.map((team) => {
          return (
            <tr>
              <td class="table-left">{team.name}</td>
              <td>{team.mp}</td>
              <td>{team.w}</td>
              <td>{team.d}</td>
              <td>{team.l}</td>
              <td>{team.gf}</td>
              <td>{team.ga}</td>
              <td>{team.gd}</td>
              <td>{team.points}</td>
            </tr>
          );
        })
      }
    </tbody>
  </table>
</div>

<style>
  table {
    width: 100%;
    border-collapse: collapse;
    position: relative;
    margin: 10px auto;
  }
  .table-left {
    width: 200px;
    text-align: left;
  }

  /* Zebra striping */
  tr:nth-of-type(odd) {
    background: #eee;
  }

  th {
    background: #56042c;
    color: white;
    font-weight: bold;
  }

  td {
    display: table-cell;
    text-align: center;
  }
  ,
  th {
    padding: 10px;
    border: 1px solid #ccc;
    text-align: left;
    font-size: 16px;
    vertical-align: middle;
  }
</style>
